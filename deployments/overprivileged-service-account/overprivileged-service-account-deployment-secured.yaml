apiVersion: v1
kind: Namespace
metadata:
   name: secured-ns
---
# redis-master-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: redis-master
  namespace: secured-ns
  labels:
    app: redis
    role: master
    tier: backend
spec:
  ports:
  - port: 6379
    targetPort: 6379
  selector:
    app: redis
    role: master
    tier: backend
---
# redis-master-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-master
  namespace: secured-ns
  labels:
    app: redis
  annotations:
    seccomp.security.alpha.kubernetes.io/pod: "runtime/default"
spec:
  selector:
    matchLabels:
      app: redis
      role: master
      tier: backend
  replicas: 1
  template:
    metadata:
      labels:
        app: redis
        role: master
        tier: backend
    spec:
      securityContext:
        {}
      automountServiceAccountToken: false
      containers:
      - name: master
        image: k8s.gcr.io/redis:e2e
        imagePullPolicy: Always
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - NET_RAW
            - ALL
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
          limits:
            cpu: 100m
            memory: 100Mi
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - "redis-cli ping"
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - "redis-cli ping"
        ports:
        - containerPort: 6379
---
# redis-slave-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: redis-slave
  namespace: secured-ns
  labels:
    app: redis
    role: slave
    tier: backend
spec:
  ports:
  - port: 6379
  selector:
    app: redis
    role: slave
    tier: backend
---
# redis-slave-deployment.yaml
apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: redis-slave
  namespace: secured-ns
  labels:
    app: redis
  annotations:
    seccomp.security.alpha.kubernetes.io/pod: "runtime/default"
spec:
  selector:
    matchLabels:
      app: redis
      role: slave
      tier: backend
  replicas: 2
  template:
    metadata:
      labels:
        app: redis
        role: slave
        tier: backend
    spec:
      securityContext:
        {}
      automountServiceAccountToken: false
      containers:
      - name: slave
        image: gcr.io/google_samples/gb-redisslave:v3@sha256:57730a481f97b3321138161ba2c8c9ca3b32df32ce9180e4029e6940446800ec
        imagePullPolicy: Always
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - NET_RAW
            # - ALL
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
          limits:
            cpu: 100m
            memory: 100Mi
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - "redis-cli ping"
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - "redis-cli ping"
        ports:
        - containerPort: 6379
---
# frontend-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: frontend
  namespace: secured-ns
  labels:
    app: guestbook
    tier: frontend
spec:
  ports:
  - port: 80
  selector:
    app: guestbook
    tier: frontend
---
# frontend-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: secured-ns
  labels:
    app: guestbook
  annotations:
    seccomp.security.alpha.kubernetes.io/pod: "runtime/default"
spec:
  replicas: 3
  selector:
    matchLabels:
      app: guestbook
      tier: frontend
  template:
    metadata:
      labels:
        app: guestbook
        tier: frontend
    spec:
      securityContext:
        {}
      automountServiceAccountToken: false
      containers:
      - name: php-redis
        # as image tag is 'latest', it will always be pulled on pod creation
        image: ryuzakyl/guestbook-frontend-with-statusphp-vuln:1.0@sha256:9315f467d2c52284741d6539edfa34c27b4b001a2f586f082aa8fab1ec8483dc
        imagePullPolicy: Always
        securityContext:
          allowPrivilegeEscalation: false
          # readOnlyRootFilesystem: true
          # runAsUser: 1000
          capabilities:
            drop:
            - NET_RAW
            # - ALL
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
          limits:
            cpu: 100m
            memory: 100Mi
        livenessProbe:
          httpGet:
            path: /
            port: 80
        readinessProbe:
          httpGet:
            path: /
            port: 80
        ports:
        - containerPort: 80
